data.train <- read.csv("data-input/train_ctrUa4K.csv")
View(data.train)
data.train <- read.csv("data-input/train_ctrUa4K.csv")
data.test <- read.csv("data-input/test_lAUu6dG.csv")
head(data.train)
str(data.train)
boxplot(data.train$ApplicantIncome)
SepWid_out <- boxplot(data.train$ApplicantIncome, plot = F)$out
SepWid_out
data.train <- data.train[-which(data.train$ApplicantIncome %in% appInc_out),]
appInc_out <- boxplot(data.train$ApplicantIncome, plot = F)$out
appInc_out
data.train <- data.train[-which(data.train$ApplicantIncome %in% appInc_out),]
head(data.train[order(data.train$ApplicantIncome, decreasing = T),])
data.train <- read.csv("data-input/train_ctrUa4K.csv")
data.test <- read.csv("data-input/test_lAUu6dG.csv")
appInc_out <- boxplot(data.train$ApplicantIncome, plot = F)$out
appInc_out
data.train <- data.train[-which(data.train$ApplicantIncome %in% appInc_out),]
head(data.train[order(data.train$ApplicantIncome, decreasing = T),])
boxplot(data.train$CoapplicantIncome)
coAppInc_out <- boxplot(data.train$CoapplicantIncome, plot = F)$out
coAppInc_out
data.train <- data.train[-which(data.train$CoapplicantIncome %in% coAppInc_out),]
head(data.train[order(data.train$CoapplicantIncome, decreasing = T),])
boxplot(data.train$CoapplicantIncome)
boxplot(data.train$LoanAmount)
loanAmount_out <- boxplot(data.train$LoanAmount, plot = F)$out
loanAmount_out
data.train <- data.train[-which(data.train$LoanAmount %in% loanAmount_out),]
head(data.train[order(data.train$LoanAmount, decreasing = T),])
boxplot(data.train$LoanAmount)
boxplot(data.train$Loan_Amount_Term)
loanTerm_out <- boxplot(data.train$Loan_Amount_Term, plot = F)$out
loanTerm_out
data.train <- data.train[-which(data.train$Loan_Amount_Term %in% loanTerm_out),]
head(data.train[order(data.train$Loan_Amount_Term, decreasing = T),])
boxplot(data.train$Loan_Amount_Term)
boxplot(data.test$ApplicantIncome)
appIncTest_out <- boxplot(data.test$ApplicantIncome, plot = F)$out
appIncTest_out
data.test <- data.test[-which(data.test$ApplicantIncome %in% appIncTest_out),]
head(data.test[order(data.test$ApplicantIncome, decreasing = T),])
boxplot(data.test$CoapplicantIncome)
boxplot(data.test$ApplicantIncome)
coAppIncTest_out <- boxplot(data.test$CoapplicantIncome, plot = F)$out
coAppIncTest_out
data.test <- data.test[-which(data.test$CoapplicantIncome %in% coAppIncTest_out),]
head(data.test[order(data.test$CoapplicantIncome, decreasing = T),])
boxplot(data.test$CoapplicantIncome)
boxplot(data.test$LoanAmount)
loanAmountTest_out <- boxplot(data_test$LoanAmount, plot = F)$out
loanAmountTest_out <- boxplot(data.test$LoanAmount, plot = F)$out
loanAmountTest_out
data.test <- data.test[-which(data.test$LoanAmount %in% loanAmountTest_out),]
head(data.test[order(data.test$LoanAmount, decreasing = T),])
boxplot(data.test$LoanAmount)
boxplot(data.test$Loan_Amount_Term)
boxplot(data.test$Loan_Amount_Term)
loanTermTest_out <- boxplot(data.test$Loan_Amount_Term, plot = F)$out
loanTermTest_out
data.test <- data.test[-which(data.test$Loan_Amount_Term %in% loanTermTest_out),]
head(data.test[order(data.test$Loan_Amount_Term, decreasing = T),])
boxplot(data.test$Loan_Amount_Term)
appIncTest_out <- boxplot(data.test$ApplicantIncome, plot = F)$out
appIncTest_out
data.glm <- glm(Loan_Status~.,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Loan_Amount_Term,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Credit_History,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.test$pred <- predict(data.glm,data.test,type="response")
View(data.test)
boxplot(data.train$ApplicantIncome)
appInc_out <- boxplot(data.train$ApplicantIncome, plot = F)$out
appInc_out
library(knitr)
library(rmdformats)
## Global options
options(max.print="1000000")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
options(scipen = 9999)
library(FactoMineR, warn.conflicts = F)
library(scales, warn.conflicts = F)
library(dplyr,warn.conflicts = F)
library(leaps, warn.conflicts = F)
library(MLmetrics, warn.conflicts = F)
library(ggplot2, warn.conflicts = F)
library(GGally, warn.conflicts = F)
library(zoo, warn.conflicts = F)
library(lmtest,warn.conflicts = F)
library(carData, warn.conflicts = F)
library(car, warn.conflicts = F)
library(formatR, warn.conflicts = F)
data.train <- read.csv("data-input/train_ctrUa4K.csv")
data.test <- read.csv("data-input/test_lAUu6dG.csv")
head(data.train)
str(data.train)
summary(data.train)
head(data.test)
str(data.test)
summary(data.test)
boxplot(data.train$ApplicantIncome)
appInc_out <- boxplot(data.train$ApplicantIncome, plot = F)$out
appInc_out
data.train <- data.train[-which(data.train$ApplicantIncome %in% appInc_out),]
head(data.train[order(data.train$ApplicantIncome, decreasing = T),])
boxplot(data.train$CoapplicantIncome)
coAppInc_out <- boxplot(data.train$CoapplicantIncome, plot = F)$out
coAppInc_out
data.train <- data.train[-which(data.train$CoapplicantIncome %in% coAppInc_out),]
head(data.train[order(data.train$CoapplicantIncome, decreasing = T),])
boxplot(data.train$LoanAmount)
loanAmount_out <- boxplot(data.train$LoanAmount, plot = F)$out
loanAmount_out
data.train <- data.train[-which(data.train$LoanAmount %in% loanAmount_out),]
head(data.train[order(data.train$LoanAmount, decreasing = T),])
boxplot(data.train$Loan_Amount_Term)
loanTerm_out <- boxplot(data.train$Loan_Amount_Term, plot = F)$out
loanTerm_out
data.train <- data.train[-which(data.train$Loan_Amount_Term %in% loanTerm_out),]
head(data.train[order(data.train$Loan_Amount_Term, decreasing = T),])
boxplot(data.test$ApplicantIncome)
appIncTest_out <- boxplot(data.test$ApplicantIncome, plot = F)$out
appIncTest_out
data.test <- data.test[-which(data.test$ApplicantIncome %in% appIncTest_out),]
head(data.test[order(data.test$ApplicantIncome, decreasing = T),])
boxplot(data.test$CoapplicantIncome)
coAppIncTest_out <- boxplot(data.test$CoapplicantIncome, plot = F)$out
coAppIncTest_out
data.test <- data.test[-which(data.test$CoapplicantIncome %in% coAppIncTest_out),]
head(data.test[order(data.test$CoapplicantIncome, decreasing = T),])
boxplot(data.test$LoanAmount)
loanAmountTest_out <- boxplot(data.test$LoanAmount, plot = F)$out
loanAmountTest_out
data.test <- data.test[-which(data.test$LoanAmount %in% loanAmountTest_out),]
head(data.test[order(data.test$LoanAmount, decreasing = T),])
boxplot(data.test$Loan_Amount_Term)
loanTermTest_out <- boxplot(data.test$Loan_Amount_Term, plot = F)$out
loanTermTest_out
data.test <- data.test[-which(data.test$Loan_Amount_Term %in% loanTermTest_out),]
head(data.test[order(data.test$Loan_Amount_Term, decreasing = T),])
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
boxplot(data$ApplicantIncome)
data <- read.csv("data-input/train_ctrUa4K.csv")
head(data)
str(data)
data <- read.csv("data-input/train_ctrUa4K.csv")
head(data)
str(data)
summary(data)
boxplot(data$ApplicantIncome)
appInc_out <- boxplot(data.train$ApplicantIncome, plot = F)$out
appInc_out <- boxplot(data$ApplicantIncome, plot = F)$out
appInc_out
data <- data[-which(data$ApplicantIncome %in% appInc_out),]
head(data[order(data$ApplicantIncome, decreasing = T),])
boxplot(data$CoapplicantIncome)
coAppInc_out <- boxplot(data$CoapplicantIncome, plot = F)$out
coAppInc_out
data <- data[-which(data$CoapplicantIncome %in% coAppInc_out),]
head(data[order(data$CoapplicantIncome, decreasing = T),])
boxplot(data$LoanAmount)
loanAmount_out <- boxplot(data$LoanAmount, plot = F)$out
loanAmount_out
data <- data[-which(data$LoanAmount %in% loanAmount_out),]
head(data[order(data$LoanAmount, decreasing = T),])
boxplot(data$Loan_Amount_Term)
loanTerm_out <- boxplot(data$Loan_Amount_Term, plot = F)$out
loanTerm_out
data <- data[-which(data$Loan_Amount_Term %in% loanTerm_out),]
head(data[order(data$Loan_Amount_Term, decreasing = T),])
set.seed(417)
intrain <- sample(nrow(data), nrow(data)*0.8)
length(intrain)
data.train <- data[intrain, ]
data.test <- data[-intrain, ]
head(data.train)
str(data.train)
summary(data.train)
head(data.test)
str(data.test)
summary(data.test)
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Loan_Amount_Term+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Loan_Amount_Term+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
as.factor(as.numeric(data.test$pred >= 0.5))
na.omit(data.test)
data.test$pred
na.omit(data.test$pred)
data.test$pred
data.test <- na.omit(data.test)
data.test$pred
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
data.test <- data.test[-which(data.test$pred %in% loanAmount_out),]
head(data[order(data$LoanAmount, decreasing = T),])
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
data.test$pred <- predict(data.glm,data.test,type="response")
library(knitr)
library(rmdformats)
## Global options
options(max.print="1000000")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
options(scipen = 9999)
library(FactoMineR, warn.conflicts = F)
library(scales, warn.conflicts = F)
library(dplyr,warn.conflicts = F)
library(leaps, warn.conflicts = F)
library(MLmetrics, warn.conflicts = F)
library(ggplot2, warn.conflicts = F)
library(GGally, warn.conflicts = F)
library(zoo, warn.conflicts = F)
library(lmtest,warn.conflicts = F)
library(carData, warn.conflicts = F)
library(car, warn.conflicts = F)
library(formatR, warn.conflicts = F)
data <- read.csv("data-input/train_ctrUa4K.csv")
head(data)
str(data)
summary(data)
boxplot(data$ApplicantIncome)
appInc_out <- boxplot(data$ApplicantIncome, plot = F)$out
appInc_out
data <- data[-which(data$ApplicantIncome %in% appInc_out),]
head(data[order(data$ApplicantIncome, decreasing = T),])
boxplot(data$CoapplicantIncome)
coAppInc_out <- boxplot(data$CoapplicantIncome, plot = F)$out
coAppInc_out
data <- data[-which(data$CoapplicantIncome %in% coAppInc_out),]
head(data[order(data$CoapplicantIncome, decreasing = T),])
boxplot(data$LoanAmount)
loanAmount_out <- boxplot(data$LoanAmount, plot = F)$out
loanAmount_out
data <- data[-which(data$LoanAmount %in% loanAmount_out),]
head(data[order(data$LoanAmount, decreasing = T),])
boxplot(data$Loan_Amount_Term)
loanTerm_out <- boxplot(data$Loan_Amount_Term, plot = F)$out
loanTerm_out
data <- data[-which(data$Loan_Amount_Term %in% loanTerm_out),]
head(data[order(data$Loan_Amount_Term, decreasing = T),])
set.seed(417)
intrain <- sample(nrow(data), nrow(data)*0.8)
length(intrain)
data.train <- data[intrain, ]
data.test <- data[-intrain, ]
head(data.train)
str(data.train)
summary(data.train)
head(data.test)
str(data.test)
summary(data.test)
data.glm <- glm(Loan_Status~Gender+Married+Dependents+Education+Self_Employed+ApplicantIncome+CoapplicantIncome+LoanAmount+Credit_History+Property_Area,data = data.train, family = "binomial")
data.glm
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
data.test$pred
as.factor(as.numeric(data.test$pred >= 0.5))
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
as.factor(as.numeric(data.test$pred >= 0.5))
as.factor(data.test$Loan_Status)
data.test$pred <- ifelse(as.factor(as.numeric(data.test$pred >= 0.5)), 'Y','N')
data.test$pred_fact <- ifelse(as.factor(as.numeric(data.test$pred >= 0.5)), 'Y','N')
as.factor(data.test$Loan_Status)
data.test$pred_fact <- ifelse(as.factor(as.numeric(data.test$pred >= 0.5)), 'Y','N')
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
pred_fact <- ifelse(as.factor(as.numeric(data.test$pred >= 0.5)), 'Y','N')
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
pred_fact <- ifelse(data.test$pred >= 0.5, 'Y','N')
as.factor(data.test$Loan_Status)
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
pred_fact <- as.factor(ifelse(data.test$pred >= 0.5, 'Y','N'))
as.factor(data.test$Loan_Status)
data.test$pred <- as.factor(ifelse(data.test$pred >= 0.5, 'Y','N'))
data.test$pred <- predict(data.glm,data.test,type="response")
data.test$pred
data.test <- na.omit(data.test)
data.test$pred <- as.factor(ifelse(data.test$pred >= 0.5, 'Y','N'))
as.factor(data.test$Loan_Status)
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
caret::confusionMatrix(data = as.factor(as.numeric(data.test$pred >= 0.5)), reference=as.factor(data.test$Loan_Status))
caret::confusionMatrix(data = data.test$pred, reference=as.factor(data.test$Loan_Status))
caret::confusionMatrix(data = data.test$pred, reference=as.factor(data.test$Loan_Status), Positive='Y')
caret::confusionMatrix(data = data.test$pred, reference=as.factor(data.test$Loan_Status), positive="Y")
